{
    "openapi": "3.0.2",
    "info": {
    "title": "Flights API",
    "description": "### This is a Swagger UI for our Flights API  \n\n### Error handling\nErrors are presented using the HTTP status codes 400-599. The response include a more detailed explanation about the error in the body.\n\n```\n{\n  \"error\": \"Cleartext explanation of the error thatoccurred\"\n}\n```\n\n### Generic API errors\nThese error responses can be returned by any of the described endpoints.\n\n| HTTP status  |  Description |\n|---|---|\n| 400| Bad input parameters or invalid request. More information can be found in the response body.\n| 401| The consumer does not have access to the requested resource or the provided token is not valid.\n| 404| The requested resource can not be found or the user does not have access to the resource.\n| 5XX| A server error has occurred while processing the request."
    
    },
    "paths":{
        "/airports":{
            "get": {
                "tags": [
                    "airports"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "examples": {
                                    "List of airports": {
                                        "value": [
                                            "Arlanda",
                                            "Heathrow"
                                        ]
                                    }
                                }
                            }
                        },
                        "description": "Returns a list of airports"
                    }
                },
                "summary": "Get a list of all airports",
                "description": "Returs a list of all airports in API"
            },
            "post": {
                "requestBody": {
                    "description": "A new airport to be created",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/new-airport"
                                }
                            }
                        },
                        "description": "New airport"
                    },
                    "400": {
                        "description": "One or all params are missing"
                    }
                },
                "summary": "Add new airport",
                "description": "Add new airport with all the details"
            }
        },
        "/airport/{id}": {
            "get": {
                "tags": [
                    "details"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "examples": {
                                    "Airport": {
                                        "value": "{\n    \"id\"=1,\n    \"name\"=Stockholm-Arlanda,\n    \"location\"=Sweden,\n    \"IATA_code\"=ARN,\n    \"ICAO_code\"=ESSA,\n    \"info\"= text\n},\n{\n    \"id\"=2,\n    \"name\"=Tallinn Airport,\n    \"location\"=Estonia,\n    \"IATA_code\"=TLL,\n    \"ICAO_code\"=EETN,\n    \"info\"= text\n},\n{\n    \"id\"=3,\n    \"name\"=Frankfurt Airport,\n    \"location\"=Germany,\n    \"IATA_code\"=FRA,\n    \"ICAO_code\"=EDDF,\n    \"info\"= text\n}\n"
                                    }
                                }
                            }
                        },
                        "description": "Returns airport information"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                },
                                "examples": {
                                    "error": {
                                        "value": {
                                            "Error": "404 - Airport not found"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Airport not found in airport array"
                    }
                },
                "operationId": "id-airport",
                "summary": "Get full details of a airport",
                "description": "Returns full details of a given id airport"
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true
                }
            ]
        }, 
        "/flights":{
            "get": {
                "tags": [
                    "flights"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "examples": {
                                    "List of flights": {
                                        "value": [
                                            "SK910",
                                            "LH355"
                                        ]
                                    }
                                }
                            }
                        },
                        "description": "Returns a list of flights"
                    }
                },
                "summary": "Get a list of all flights",
                "description": "Returs a list of all flights in API"
            }
        }
    }
}